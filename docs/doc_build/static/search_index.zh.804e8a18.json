[{"id":0,"title":"Markdown & MDX","content":"#\n\nRspress supports not only Markdown but also MDX, a powerful way to develop\ncontent.\n\n\nMarkdown#\n\nMDX is a superset of Markdown, which means you can write Markdown files as\nusual. For example:\n\n\n\n\nUse component#\n\nWhen you want to use React components in Markdown files, you should name your\nfiles with .mdx extension. For example:\n\n\n\n\nFront matter#\n\nYou can add Front Matter at the beginning of your Markdown file, which is a\nYAML-formatted object that defines some metadata. For example:\n\n\n\n> Note: By default, Rspress uses h1 headings as html headings.\n\nYou can also access properties defined in Front Matter in the body, for example:\n\n\n\nThe previously defined properties will be passed to the component as frontmatter\nproperties. So the final output will be:\n\n\n\n\nCustom container#\n\nYou can use the ::: syntax to create custom containers and support custom\ntitles. For example:\n\nInput:\n\n\n\nOutput:\n\nTIP\n\nThis is a block of type tip\n\nINFO\n\nThis is a block of type info\n\nWARNING\n\nThis is a block of type warning\n\nDANGER\n\nThis is a block of type danger\n\nDETAILS\n\nThis is a block of type details\n\nCustom Title\n\nThis is a block of Custom Title\n\nCustom Title\n\nThis is a block of Custom Title\n\n\nCode block#\n\n\nBasic usage#\n\nYou can use the ``` syntax to create code blocks and support custom titles. For\nexample:\n\nInput:\n\n\n\nOutput:\n\n\n\n\n\n\nShow line numbers#\n\nIf you want to display line numbers, you can enable the showLineNumbers option\nin the config file:\n\n\n\n\nWrap code#\n\nIf you want to wrap long code line by default, you can enable the\ndefaultWrapCode option in the config file:\n\n\n\n\nLine highlighting#\n\nYou can also apply line highlighting and code block title at the same time, for\nexample:\n\nInput:\n\n\n\nOutput:\n\n\n\n\nRustify MDX compiler#\n\nYou can enable Rustify MDX compiler by following config:","routePath":"/en/guide/","lang":"zh","toc":[{"text":"Markdown","id":"markdown","depth":2,"charIndex":88},{"text":"Use component","id":"use-component","depth":2,"charIndex":198},{"text":"Front matter","id":"front-matter","depth":2,"charIndex":336},{"text":"Custom container","id":"custom-container","depth":2,"charIndex":767},{"text":"Code block","id":"code-block","depth":2,"charIndex":1190},{"text":"Basic usage","id":"basic-usage","depth":3,"charIndex":1204},{"text":"Show line numbers","id":"show-line-numbers","depth":3,"charIndex":1332},{"text":"Wrap code","id":"wrap-code","depth":3,"charIndex":1455},{"text":"Line highlighting","id":"line-highlighting","depth":3,"charIndex":1580},{"text":"Rustify MDX compiler","id":"rustify-mdx-compiler","depth":2,"charIndex":1712}],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"Hello world!","content":"#\n\n\nStart#\n\nWrite something to build your own docs! 🎁","routePath":"/en/hello","lang":"zh","toc":[{"text":"Start","id":"start","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"Introduction 介绍","content":"#\n\n> 用于介绍向用户提供的功能（待开发）","routePath":"/display/general/introduction","lang":"zh","toc":[],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"List 列表","content":"#\n\n> 通用列表组件，支持平面列表和分组列表，点击高亮选中\n\n\n示例效果#\n\n\n\n\nList 演示#\n\n\n参数演示#\n\nPROP                  TYPE                                      DEFAULT   DESCRIPTION\nvalue                 string | undefined                        –         当前选中的值\noptions               SelectOptionsType                         –         数据源，支持平面或分组\noptionGroupChildren   string                                    \"items\"   分组内选项字段名\noptionGroupLabel      string                                    \"label\"   分组标题字段名\noptionGroupTemplate   (group: OptionGroup) => React.ReactNode   –         自定义分组标题渲染\noptionLabel           string                                    \"label\"   option 显示文本字段\noptionValue           string                                    \"value\"   option value 字段\nonSelected            (value: string) => void                   –         点击选项触发","routePath":"/display/general/list","lang":"zh","toc":[{"text":"示例效果","id":"示例效果","depth":2,"charIndex":32},{"text":"List 演示","id":"list-演示","depth":2,"charIndex":42},{"text":"参数演示","id":"参数演示","depth":2,"charIndex":53}],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"Input 输入","content":"#\n\n\nInput 输入#","routePath":"/display/input/input","lang":"zh","toc":[{"text":"Input 输入","id":"input-输入-1","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"Prompt 提示","content":"#\n\n> 用于展示一组预定义的问题或建议\n\n\n示例效果#\n\n\n\n\nPrompt演示#\n\n\n参数说明#\n\n参数          说明             类型                          默认值\nsize        设置提示尺寸         \"lg\" | \"md\" | \"sm\" | \"xs\"   \"md\"\nclassName   自定义样式类         string                      -\nchildren    内容，一般包含标题和描述   ReactNode                   -","routePath":"/display/input/prompt","lang":"zh","toc":[{"text":"示例效果","id":"示例效果","depth":2,"charIndex":22},{"text":"Prompt演示","id":"prompt演示","depth":2,"charIndex":32},{"text":"参数说明","id":"参数说明","depth":2,"charIndex":44}],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"Sender 发送","content":"#\n\n> 这是一个带发送按钮和自动高度文本框的消息输入组件。\n\n\n组件演示#\n\n\n\n\nSender演示#\n\n\n参数说明#\n\n\nSenderButton 组件参数说明#\n\n参数名         类型                  默认值         描述\nicon        React.ReactNode     undefined   按钮内显示的图标。默认：isSending 为 false 显示发送图标，true 显示停止图标。可覆盖。\nisSending   boolean             false       是否处于发送中状态。true 显示停止图标，false 显示发送图标。\n其他          继承自 button 元素所有属性               其他原生 button 属性，如 onClick, className 等\n\n\nSender 组件参数说明#\n\n参数名               类型                                                          默认值                           描述\ninitialMessage    string                                                      \"\"                            输入框的初始内容\nplaceholder       string                                                      \"Type your message here...\"   输入框的占位提示文字\ninput             (message: string, options: { callbacks: { onFinish: () =>   必填                            输入处理函数，执行消息发送逻辑。参数包括消息文本和包含 onFinish 回调及 AbortSignal。\n                  void }; signal: AbortSignal }) => void | Promise<void>\nonMessageChange   (message: string) => void                                   undefined                     消息内容变化回调，每次输入框内容变动都会调用\nonSend            (controller: AbortController) => void                       undefined                     点击发送按钮时触发，传入 AbortController，可用于取消发送\n其他                继承自 div 元素所有属性                                                                            其他原生 div 属性，如 className, style 等","routePath":"/display/input/sender","lang":"zh","toc":[{"text":"组件演示","id":"组件演示","depth":2,"charIndex":32},{"text":"Sender演示","id":"sender演示","depth":2,"charIndex":42},{"text":"参数说明","id":"参数说明","depth":2,"charIndex":54},{"text":"SenderButton 组件参数说明","id":"senderbutton-组件参数说明","depth":3,"charIndex":62},{"text":"Sender 组件参数说明","id":"sender-组件参数说明","depth":3,"charIndex":393}],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"Button 按钮","content":"#\n\n> 通用按钮组件，支持不同风格和大小\n\n\n示例效果#\n\n默认按钮#\n\n\n\n链接按钮#\n\n\n\nicon 大小按钮#\n\n\n\n\n多种组合示例#\n\n\n参数表#\n\nPROP        TYPE                 DEFAULT     DESCRIPTION\nvariant     \"default\" | \"link\"   \"default\"   按钮风格\nsize        \"default\" | \"icon\"   \"default\"   按钮尺寸\nclassName   string               –           自定义 class","routePath":"/display/interaction/button","lang":"zh","toc":[{"text":"示例效果","id":"示例效果","depth":2,"charIndex":23},{"text":"默认按钮","id":"默认按钮","depth":4,"charIndex":30},{"text":"链接按钮","id":"链接按钮","depth":4,"charIndex":39},{"text":"icon 大小按钮","id":"icon-大小按钮","depth":4,"charIndex":48},{"text":"多种组合示例","id":"多种组合示例","depth":2,"charIndex":63},{"text":"参数表","id":"参数表","depth":2,"charIndex":73}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"Header 头部","content":"#\n\n> 用于在头部展示logo、标题等内容的组件（待开发）","routePath":"/display/layout/header","lang":"zh","toc":[],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"Layout 布局","content":"#\n\n> 用于对不同的模块进行排列布局（待开发）","routePath":"/display/layout/layout","lang":"zh","toc":[],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"Bubble 气泡","content":"#\n\n> 用于承载对话内容的气泡组件，支持 loading、透明背景、自定义加载动画等。\n\n\n示例效果#\n\n\n\n\nBubble 组件参数演示#\n\n\n参数#\n\n参数名          类型                    默认值     描述\ntext         string                必填      气泡中显示的文本，可包含 Markdown\nbackground   transparent | solid   solid   背景样式\nisPending    boolean               false   是否显示加载动画\npending      React.ReactNode       默认动画    自定义加载内容\n\n> ✅ 提示：还可接收原生 div props，如 className、style 等","routePath":"/display/session/bubble","lang":"zh","toc":[{"text":"示例效果","id":"示例效果","depth":2,"charIndex":46},{"text":"Bubble 组件参数演示","id":"bubble-组件参数演示","depth":2,"charIndex":56},{"text":"参数","id":"参数","depth":2,"charIndex":73}],"domain":"","frontmatter":{},"version":""},{"id":12,"title":"Open-AI 对话","content":"#\n\n> 待开发","routePath":"/guide/model-docking/Open-AI","lang":"zh","toc":[],"domain":"","frontmatter":{},"version":""},{"id":13,"title":"其他","content":"#\n\n> 待开发","routePath":"/guide/model-docking/other","lang":"zh","toc":[],"domain":"","frontmatter":{},"version":""},{"id":14,"title":"FQA","content":"#\n\n\nContact Us#\n\n提问之前建可以找找有没有类似的问题。此外亦可参考过往的 issues\n\n如有其他问题，欢迎给我们提issue。\n\n欢迎联系我们。\n\nMATECHAT REACT CHAT GROUP   SOA CHAT GROUP\n                            ","routePath":"/guide/other/FQA","lang":"zh","toc":[{"text":"Contact Us","id":"contact-us","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":15,"title":"Changelog","content":"更新日志#\n\n> 以下内容自动同步自主项目 CHANGELOG.md\n\n--------------------------------------------------------------------------------\n\n\nChangelog#\n\n\n[0.1.0-alpha.5]#\n\n\nNew Features#\n\n * 31f4edf (#31) Add FileUpload component for file selections.\n * 4e2905b Optimize callback performance by using useCallback.\n * cd8ace0 Remove gap and margin between textarea and footer in Sender\n   component.\n\n\n[0.1.0-alpha.4]#\n\n\nNew Features#\n\n * a0b5fc8 (#26) Add List component in list.tsx to support grouped or normal\n   lists.\n\n\nBug Fixes#\n\n * d61b43c Fix the build issue in utils by adding utils/index.ts to vite build\n   entries.\n\n\n[0.1.0-alpha.3]#\n\n * 3a19451 Fix the lint error on useEffect in sender.tsx.\n\n * b5e4cb8 Optimize the SenderButton component in sender.tsx.\n   \n   This optimization includes:\n   \n   * Add icon and isSending option to SenderButton component.\n   * Add doc-string for SenderButton and Sender props.\n\n\n[0.1.0-alpha.2]#\n\n * 17b60e7 (#23 by @Raven-Book) Add loading animation during AI request wait\n   states.\n   \n   * Updated BubbleListProps and Bubble in bubble.tsx to support pending states\n   * Modified useChat in chat.ts to set pending = true before API requests\n\n\n[0.1.0-alpha.1]#\n\n * 577946c Optimize background option of BubbleList component.\n   \n   BREAKING CHANGES:\n   \n   * Use left-solid, right-solid, transparent and solid as the value of\n     background option.\n   * Default to use right-solid as the value of background option in Bubble\n     component.\n   * Remove left-only and right-only value in Bubble component.\n\n * 577946c Bump dependencies.\n\n\n[0.1.0-alpha.0]#\n\n * 464fc05 Release first pre-release with alpha tag of @matechat/react.","routePath":"/guide/other/update-log","lang":"zh","toc":[{"text":"[0.1.0-alpha.5]","id":"010-alpha5","depth":2,"charIndex":131},{"text":"New Features","id":"new-features","depth":3,"charIndex":150},{"text":"[0.1.0-alpha.4]","id":"010-alpha4","depth":2,"charIndex":378},{"text":"New Features","id":"new-features-1","depth":3,"charIndex":397},{"text":"Bug Fixes","id":"bug-fixes","depth":3,"charIndex":501},{"text":"[0.1.0-alpha.3]","id":"010-alpha3","depth":2,"charIndex":606},{"text":"[0.1.0-alpha.2]","id":"010-alpha2","depth":2,"charIndex":903},{"text":"[0.1.0-alpha.1]","id":"010-alpha1","depth":2,"charIndex":1170},{"text":"[0.1.0-alpha.0]","id":"010-alpha0","depth":2,"charIndex":1565}],"domain":"","frontmatter":{},"version":""},{"id":16,"title":"快速开始","content":"#\n\n\n安装#\n\n使用你喜欢的包管理器安装 MateChat-React：\n\n\n\n--------------------------------------------------------------------------------\n\n\n基本用法#\n\n在 React 项目中引入并使用 MateChat：\n\n","routePath":"/guide/start/getting-started","lang":"zh","toc":[{"text":"安装","id":"安装","depth":2,"charIndex":3},{"text":"基本用法","id":"基本用法","depth":2,"charIndex":123}],"domain":"","frontmatter":{},"version":""},{"id":17,"title":"MateChat-React","content":"#\n\n> 前端智能化场景解决方案UI库，轻松构建你的AI应用。已服务于华为内部多个应用智能化改造，并助力CodeArts、InsCode AI\n> IDE等智能化助手搭建。\n\n\n介绍#\n\n> AI Conversation UI for Frontend Developers\n\nMateChat-React 是一个专为前端开发者设计的、灵活且可定制的聊天 UI 组件库，适用于构建 AI\n对话类产品。它封装了现代化的会话界面逻辑和交互细节，助力你快速搭建自己的 AI 聊天助手、智能客服或知识问答系统。\n\n\n核心特性#\n\n * 🎨 高度可定制：支持修改主题、布局与消息类型，轻松适配你的品牌或产品风格。\n * ⚛️ 现代化技术栈：基于 React + TypeScript 构建，类型安全、结构清晰，易于维护与扩展。\n * 🧠 AI 场景适配：内置问答模式、角色扮演、上下文记忆等典型 AI 交互逻辑，降低搭建门槛。\n * 🔌 轻松集成：提供灵活的 Props 配置，支持与任意后端或 AI 接口（如 OpenAI、Claude、DeepSeek）对接。\n * 📦 开箱即用：内置默认样式与交互，极简配置即可运行，开发体验顺滑。\n\n\n使用场景#\n\n * ChatGPT 风格的 Web 对话界面\n * 内嵌式智能客服聊天窗\n * 知识库问答 / FAQ 系统\n * 教育/写作/编程助手平台前端","routePath":"/guide/start/introduction","lang":"zh","toc":[{"text":"介绍","id":"介绍","depth":2,"charIndex":88},{"text":"核心特性","id":"核心特性","depth":2,"charIndex":254},{"text":"使用场景","id":"使用场景","depth":2,"charIndex":521}],"domain":"","frontmatter":{},"version":""}]